[dev-dependencies]
bgfx_folder=

; (SEARCHES IN <bgfx_folder>/.build/) win64_vs2022/osx-arm64/linux-clang/linux-gcc etc...
bgfx_deps_target=

[details]
project_dir=src
export_dir=export
project_export_name=bgfx project

; ex. windows_amd64,linux_amd64,darwin_amd64
build_targets=

; Example build rules for shaders
; NOTE: Seperate compiler flags with a ','
; [build-rule-windows_amd64]
; dont_build_shaders=metal
; compiler_flags=...

; [build-rule-linux_amd64]
; dont_build_shaders=hlsl,metal
; compiler_flags=...

; [build-rule-darwin_amd64]
; dont_build_shaders=hlsl,spirv
; compiler_flags=...

[version]
version_major=1
version_minor=0
version_patch=0

[shaders]
shader_in_dir=; ...
shader_out_dir=; ...

; opengles,hlsl,metal,glsl,spirv
shader_targets=

; ex. %bgfx_folder%/src,src/includes etc...
shader_includes=

; Creates a folder at the path with a "shader.odin" file.
; If the path is empy, the folder will not generate.
generate_dir=

; When generating the bgfx project,
; make sure that you put the min opengl version.
; https://bkaradzic.github.io/bgfx/build.html#general-directly-with-genie
[shader_versions]
; opengles=320_es
; hlsl=s_5_0
; metal=metal
; glsl=440
; spirv=spirv
